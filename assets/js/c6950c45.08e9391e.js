"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[504],{1249:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>l,default:()=>c,frontMatter:()=>s,toc:()=>a});var i=t(4848),r=t(8453);const s={},l=void 0,a=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Installation",id:"installation",level:2},{value:"About",id:"about",level:2},{value:"Implementation Repo:",id:"implementation-repo",level:2},{value:"Example usage basic bot",id:"example-usage-basic-bot",level:2},{value:"Plugins list:",id:"plugins-list",level:2},{value:"Need Help?",id:"need-help",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("p",{align:"center",children:(0,i.jsx)("img",{src:"https://raw.githubusercontent.com/parasop/poru/v5/assets/poru.png",alt:"Poru Logo",height:"340",width:"340"})}),"\n",(0,i.jsxs)("p",{align:"center",children:[(0,i.jsx)("a",{href:"https://discord.gg/Zmmc47Nrh8",children:(0,i.jsx)("img",{src:"https://img.shields.io/discord/567705326774779944?style=flat-square",alt:"Discord"})}),(0,i.jsx)("a",{href:"https://www.npmjs.com/package/poru",children:(0,i.jsx)("img",{src:"https://img.shields.io/npm/v/poru?style=flat-square",alt:"npm"})}),(0,i.jsx)("img",{src:"https://img.shields.io/github/stars/parasop/poru?style=flat-square",alt:"GitHub Stars"}),(0,i.jsx)("img",{src:"https://img.shields.io/github/issues-raw/parasop/poru?style=flat-square",alt:"GitHub issues"}),(0,i.jsx)("img",{src:"https://img.shields.io/snyk/vulnerabilities/npm/poru?style=flat-square",alt:"Snyk Vulnerabilities for npm package"}),(0,i.jsx)("img",{src:"https://img.shields.io/npm/l/poru?style=flat-square",alt:"NPM"})]}),"\n",(0,i.jsx)("p",{align:"center",children:(0,i.jsx)(n.p,{children:"note: this version supports only Lavalink v4 or above"})}),"\n",(0,i.jsx)("p",{align:"center",children:(0,i.jsx)("a",{href:"https://nodei.co/npm/poru/",children:(0,i.jsx)("img",{src:"https://nodei.co/npm/poru.png?downloads=true&downloadRank=true&stars=true",alt:"Poru NPM Package"})})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of contents"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://poru.js.org",children:"Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#about",children:"About"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#implementation-repo",children:"Implementation Repo"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#example-usage-basic-bot",children:"Basic Usage"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#plugins-list",children:"Plugins List"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#need-help",children:"Help & Support"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/parasop/poru-example",children:"Example Bot"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Using npm\nnpm install poru\n\n# Using yarn\nyarn add poru\n"})}),"\n",(0,i.jsx)(n.h2,{id:"about",children:"About"}),"\n",(0,i.jsxs)(n.p,{children:["To use, you need a configured ",(0,i.jsx)(n.a,{href:"https://github.com/lavalink-devs/Lavalink",children:"Lavalink"})," instance."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stable client"}),"\n",(0,i.jsx)(n.li,{children:"Support TypeScript"}),"\n",(0,i.jsx)(n.li,{children:"100% Compatible with Lavalink"}),"\n",(0,i.jsx)(n.li,{children:"Object-oriented"}),"\n",(0,i.jsx)(n.li,{children:"100% Customizable"}),"\n",(0,i.jsx)(n.li,{children:"Easy to setup"}),"\n",(0,i.jsx)(n.li,{children:"Inbuilt Queue System"}),"\n",(0,i.jsx)(n.li,{children:"Inbuilt support for Spotify, Apple Music, and Deezer"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"implementation-repo",children:"Implementation Repo:"}),"\n",(0,i.jsx)(n.p,{children:"Note: Send PR to add your repo here"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"URL"}),(0,i.jsx)(n.th,{children:"Features"}),(0,i.jsx)(n.th,{children:"Additional Information"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/parasop/poru-example",children:"Poru Music"})}),(0,i.jsx)(n.td,{children:"Basic example"}),(0,i.jsx)(n.td,{children:"Works with the latest Discord.js version"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/Reishimanfr/TWM-bot",children:"The world machine"})}),(0,i.jsx)(n.td,{children:"See GitHub repo for the full list"}),(0,i.jsx)(n.td,{children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/adh319/Lunox",children:"Lunox"})}),(0,i.jsx)(n.td,{children:"Look over the repo for the full list of features"}),(0,i.jsx)(n.td,{children:"Simply powerful Discord Music Bot"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"example-usage-basic-bot",children:"Example usage basic bot"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'const { Client, GatewayIntentBits } = require("discord.js");\nconst { Poru } = require("poru");\n\nconst nodes = [\n    {\n        name: "local-node",\n        host: "localhost",\n        port: 2333,\n        password: "youshallnotpass",\n    },\n];\n\nconst PoruOptions = {\n    library: "discord.js",\n    defaultPlatform: "scsearch",\n};\n\nconst client = new Client({\n    intents: [\n        GatewayIntentBits.Guilds,\n        GatewayIntentBits.GuildMessages,\n        GatewayIntentBits.GuildVoiceStates,\n        GatewayIntentBits.MessageContent,\n    ],\n});\n\nclient.poru = new Poru(client, nodes, PoruOptions);\n\nclient.poru.on("trackStart", (player, track) => {\n    const channel = client.channels.cache.get(player.textChannel);\n    return channel.send(`Now playing \\`${track.info.title}\\``);\n});\n\nclient.on("ready", () => {\n    console.log("Ready!");\n    client.poru.init(client);\n});\n\nclient.on("interactionCreate", async (interaction) => {\n    if (!interaction.isChatInputCommand()) return;\n    if (!interaction.member.voice.channel) {\n        return interaction.reply({\n            content: `Please connect with a voice channel `,\n            ephemeral: true,\n        });\n    }\n\n    const track = interaction.options.getString("track");\n\n    const res = await client.poru.resolve({ query: track, source: "scsearch", requester: interaction.member });\n\n    if (res.loadType === "error") {\n        return interaction.reply("Failed to load track.");\n    } else if (res.loadType === "empty") {\n        return interaction.reply("No source found!");\n    }\n\n    // Create connection with Discord voice channel\n    const player = client.poru.createConnection({\n        guildId: interaction.guild.id,\n        voiceChannel: interaction.member.voice.channelId,\n        textChannel: interaction.channel.id,\n        deaf: true,\n    });\n\n    if (res.loadType === "playlist") {\n        for (const track of res.tracks) {\n            track.info.requester = interaction.user;\n            player.queue.add(track);\n        }\n\n        interaction.reply(\n            `${res.playlistInfo.name} has been loaded with ${res.tracks.length}`\n        );\n    } else {\n        const track = res.tracks[0];\n        track.info.requester = interaction.user;\n        player.queue.add(track);\n        interaction.reply(`Queued Track \\n \\`${track.info.title}\\``)\n    }\n\n    if (!player.isPlaying && player.isConnected) player.play();\n});\n\nclient.login("TOKEN");\n'})}),"\n",(0,i.jsx)(n.h2,{id:"plugins-list",children:"Plugins list:"}),"\n",(0,i.jsx)(n.p,{children:"Note: Open a PR to add your plugin here"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Name"}),(0,i.jsx)(n.th,{children:"Link"}),(0,i.jsx)(n.th,{children:"Additional Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Poru Spotify"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/parasop/poru-spotify",children:"poru-spotify"})}),(0,i.jsx)(n.td,{children:"Plugin for integrating Spotify with Poru"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Poru Deezer"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/parasop/poru-deezer",children:"poru-deezer"})}),(0,i.jsx)(n.td,{children:"Plugin for integrating Deezer with Poru"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Poru Apple Music"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/parasop/poru-applemusic",children:"poru-applemusic"})}),(0,i.jsx)(n.td,{children:"Plugin for integrating Apple Music with Poru"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"need-help",children:"Need Help?"}),"\n",(0,i.jsxs)(n.p,{children:["Feel free to join our ",(0,i.jsx)(n.a,{href:"https://discord.gg/Zmmc47Nrh8",children:"Discord server"}),". Give us suggestions and advice about errors and new features."]}),"\n",(0,i.jsxs)(n.p,{children:["With \u2764\ufe0f by ",(0,i.jsx)(n.a,{href:"https://github.com/parasop",children:"Paras"}),"."]})]})}function c(e){void 0===e&&(e={});const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);